'use client'

import { BuyButton } from "@/components/buttons/buy-button"
import { Link } from "@/components/primitives/link-with-transition"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { HeartFilledIcon } from "@radix-ui/react-icons"
import { AnimatePresence, motion } from 'framer-motion'
import { ArrowUpRight } from 'lucide-react'
import type { KeyboardEvent } from 'react'
import { useEffect, useRef, useState } from 'react'

export function AISection() {
	const [prompt, setPrompt] = useState('')
	const [response, setResponse] = useState('')
	const [isGenerating, setIsGenerating] = useState(false)
	const [showCTA, setShowCTA] = useState(false)
	const responseRef = useRef<HTMLPreElement>(null)

	const handleGenerate = () => {
		if (!prompt || isGenerating) return
		setIsGenerating(true)
		setResponse('')
		setShowCTA(false)
		streamResponse()
	}

	const streamResponse = () => {
		const fullResponse = ` // Generated @ shipkit.io \n
import React from 'react'
import { Button } from '@/components/ui/button'
import { cn } from '@/lib/utils'\n

export function ${prompt.split(' ').map(w => w.charAt(0).toUpperCase() + w.slice(1)).join('')}() {
  return (
    <div className="p-4 bg-white rounded-lg shadow-md">
      <h2 className="text-2xl font-bold mb-2">${prompt}</h2>
      <p className="text-gray-600">This component was generated by v0 AI.</p>
      <button className="mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors">
        Click me
      </button>
    </div>
  )
}`

		let index = 0
		const interval = setInterval(() => {
			if (index > 100) {
				setTimeout(() => setShowCTA(true), 500)
			}
			if (index < fullResponse.length) {
				setResponse(prev => prev + fullResponse[index])
				index++
			} else {
				clearInterval(interval)
				setIsGenerating(false)
			}
		}, 20)
	}

	useEffect(() => {
		if (responseRef.current) {
			responseRef.current.scrollTop = responseRef.current.scrollHeight
		}
	}, [])

	const handleKeyDown = (e: KeyboardEvent) => {
		if (e.key === 'Enter' && !e.shiftKey) {
			e.preventDefault()
			handleGenerate()
		}
	}

	return (
		<section className="flex flex-col items-center justify-center px-4 py-20">
			<div className="w-full max-w-[860px] mx-auto space-y-20">
				<h1 className="text-4xl sm:text-5xl md:text-6xl lg:text-[80px] font-medium tracking-[-0.02em] text-center text-white">
					What can I help you ship?
				</h1>

				<div className="relative">
					<div className="relative bg-[#1C1C1C] rounded-xl border border-white/[0.08] shadow-[0_0_1px_1px_rgba(0,0,0,0.3)]">
						<Input
							value={prompt}
							onChange={(e) => setPrompt(e.target.value)}
							onKeyDown={handleKeyDown}
							placeholder="Ask v0 a question..."
							className="border-0 bg-transparent h-[60px] px-6 text-lg text-white placeholder:text-white/50 shadow-none outline-none ring-0 focus-visible:ring-0"
							disabled={isGenerating}
						/>
						<div className="absolute right-3 top-1/2 -translate-y-1/2 flex items-center gap-1.5">
							<div className="w-px h-6 bg-white/10" />
							<Button
								size="icon"
								variant="ghost"
								className="h-8 w-8 text-white/50 hover:text-white"
								onClick={handleGenerate}
								disabled={isGenerating || !prompt}
							>
								<ArrowUpRight className="h-4 w-4" />
							</Button>
						</div>
					</div>
				</div>
			</div>

			<AnimatePresence>
				{response && (
					<motion.div
						initial={{ opacity: 0, y: 20 }}
						animate={{ opacity: 1, y: 0 }}
						exit={{ opacity: 0, y: -20 }}
						className="w-full max-w-[860px] mx-auto mt-8 relative"
					>
						<div className="bg-[#1C1C1C] rounded-xl border border-white/[0.08] overflow-hidden">
							<pre
								ref={responseRef}
								className="text-sm text-white/70 font-mono p-6 h-[200px] overflow-hidden"
							>
								<code>{response}</code>
							</pre>
							<AnimatePresence>
								{showCTA && (
									<motion.div
										initial={{ opacity: 0 }}
										animate={{ opacity: 1 }}
										exit={{ opacity: 0 }}
										transition={{ duration: 0.3 }}
										className="absolute inset-0 flex items-end justify-center p-6"
									>
										<motion.div
											className="absolute inset-0 bg-gradient-to-b from-transparent via-black/80 to-black backdrop-blur-sm opacity-90"
											initial={{ backdropFilter: "blur(0px)" }}
											animate={{ backdropFilter: "blur(8px)" }}
											exit={{ backdropFilter: "blur(0px)" }}
											transition={{ duration: 0.3 }}
										/>
										<motion.div
											className="w-full max-w-md text-center relative z-10 space-y-4"
											initial={{ opacity: 0, y: 20 }}
											animate={{ opacity: 1, y: 0 }}
											exit={{ opacity: 0, y: 10 }}
											transition={{ duration: 0.3, delay: 0.15 }}
										>
											<p className="text-white/70 ">
												We <HeartFilledIcon className="w-4 h-4 inline-block" /> v0.
											</p>
											<BuyButton />
											<p className="text-white/70 text-xs">
												See more at <Link href={'https://v0.dev'} className="text-purple-400 hover:text-purple-300">v0.dev</Link>
											</p>
										</motion.div>
									</motion.div>
								)}
							</AnimatePresence>
						</div>
					</motion.div>
				)}
			</AnimatePresence>
		</section>
	)
}

